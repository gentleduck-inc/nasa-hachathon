{"version":3,"sources":["../../src/minio/minio.service.ts"],"sourcesContent":["import type { Readable } from 'node:stream'\nimport {\n  CreateBucketCommand,\n  GetObjectCommand,\n  HeadBucketCommand,\n  PutObjectCommand,\n  S3Client,\n} from '@aws-sdk/client-s3'\nimport { Inject, Injectable, Logger } from '@nestjs/common'\nimport type { ConfigService } from '@nestjs/config'\nimport { WINSTON_MODULE_NEST_PROVIDER, type WinstonLogger } from 'nest-winston'\nimport { throwError } from '~/common/libs'\nimport { LoggerService } from '~/logger'\nimport type { MinioMessageType } from './minio.types'\n\n@Injectable()\nexport class MinioService {\n  private readonly s3: S3Client\n  private readonly bucket: string\n\n  constructor(\n    private readonly config: ConfigService,\n\n    @Inject(WINSTON_MODULE_NEST_PROVIDER)\n    private readonly logger: WinstonLogger,\n  ) {\n    this.bucket = this.config.get<string>('MINIO_BUCKET') || 'uploads'\n\n    this.s3 = new S3Client({\n      credentials: {\n        accessKeyId: this.config.get<string>('MINIO_ACCESS_KEY') ?? 'root',\n        secretAccessKey: this.config.get<string>('MINIO_SECRET_KEY') ?? 'root',\n      },\n      endpoint: this.config.get<string>('MINIO_ENDPOINT') ?? 'http://localhost:9000',\n      forcePathStyle: true,\n      region: this.config.get<string>('MINIO_REGION') ?? 'us-east-1',\n    })\n  }\n\n  async ensureBucketExists() {\n    try {\n      await this.s3.send(new HeadBucketCommand({ Bucket: this.bucket }))\n    } catch (error) {\n      this.logger.warn(`Bucket \"${this.bucket}\" not found. Creating...`)\n      await this.s3.send(new CreateBucketCommand({ Bucket: this.bucket }))\n    }\n  }\n\n  async uploadFile(key: string, body: Buffer, contentType: string) {\n    try {\n      await this.ensureBucketExists()\n      const command = new PutObjectCommand({\n        Body: body,\n        Bucket: this.bucket,\n        ContentType: contentType,\n        Key: key,\n      })\n\n      await this.s3.send(command)\n      return `${this.bucket}/${key}`\n    } catch (error) {\n      throwError<MinioMessageType>('MINIO_FILE_DOWNLOAD_FAILED')\n      return\n    }\n  }\n\n  async getFile(key: string) {\n    try {\n      const command = new GetObjectCommand({ Bucket: this.bucket, Key: key })\n      const result = await this.s3.send(command)\n      return result.Body as Readable\n    } catch (error) {\n      throwError<MinioMessageType>('MINIO_FILE_DOWNLOAD_FAILED')\n      return\n    }\n  }\n}\n"],"names":["MinioService","ensureBucketExists","s3","send","HeadBucketCommand","Bucket","bucket","error","logger","warn","CreateBucketCommand","uploadFile","key","body","contentType","command","PutObjectCommand","Body","ContentType","Key","throwError","getFile","GetObjectCommand","result","config","get","S3Client","credentials","accessKeyId","secretAccessKey","endpoint","forcePathStyle","region"],"mappings":";;;;+BAgBaA;;;eAAAA;;;0BATN;wBACoC;6BAEsB;sBACtC;;;;;;;;;;;;;;;AAKpB,IAAA,AAAMA,eAAN,MAAMA;IAuBX,MAAMC,qBAAqB;QACzB,IAAI;YACF,MAAM,IAAI,CAACC,EAAE,CAACC,IAAI,CAAC,IAAIC,2BAAiB,CAAC;gBAAEC,QAAQ,IAAI,CAACC,MAAM;YAAC;QACjE,EAAE,OAAOC,OAAO;YACd,IAAI,CAACC,MAAM,CAACC,IAAI,CAAC,CAAC,QAAQ,EAAE,IAAI,CAACH,MAAM,CAAC,wBAAwB,CAAC;YACjE,MAAM,IAAI,CAACJ,EAAE,CAACC,IAAI,CAAC,IAAIO,6BAAmB,CAAC;gBAAEL,QAAQ,IAAI,CAACC,MAAM;YAAC;QACnE;IACF;IAEA,MAAMK,WAAWC,GAAW,EAAEC,IAAY,EAAEC,WAAmB,EAAE;QAC/D,IAAI;YACF,MAAM,IAAI,CAACb,kBAAkB;YAC7B,MAAMc,UAAU,IAAIC,0BAAgB,CAAC;gBACnCC,MAAMJ;gBACNR,QAAQ,IAAI,CAACC,MAAM;gBACnBY,aAAaJ;gBACbK,KAAKP;YACP;YAEA,MAAM,IAAI,CAACV,EAAE,CAACC,IAAI,CAACY;YACnB,OAAO,GAAG,IAAI,CAACT,MAAM,CAAC,CAAC,EAAEM,KAAK;QAChC,EAAE,OAAOL,OAAO;YACda,IAAAA,gBAAU,EAAmB;YAC7B;QACF;IACF;IAEA,MAAMC,QAAQT,GAAW,EAAE;QACzB,IAAI;YACF,MAAMG,UAAU,IAAIO,0BAAgB,CAAC;gBAAEjB,QAAQ,IAAI,CAACC,MAAM;gBAAEa,KAAKP;YAAI;YACrE,MAAMW,SAAS,MAAM,IAAI,CAACrB,EAAE,CAACC,IAAI,CAACY;YAClC,OAAOQ,OAAON,IAAI;QACpB,EAAE,OAAOV,OAAO;YACda,IAAAA,gBAAU,EAAmB;YAC7B;QACF;IACF;IAvDA,YACE,AAAiBI,MAAqB,EAEtC,AACiBhB,MAAqB,CACtC;aAJiBgB,SAAAA;aAGAhB,SAAAA;QAEjB,IAAI,CAACF,MAAM,GAAG,IAAI,CAACkB,MAAM,CAACC,GAAG,CAAS,mBAAmB;QAEzD,IAAI,CAACvB,EAAE,GAAG,IAAIwB,kBAAQ,CAAC;YACrBC,aAAa;gBACXC,aAAa,IAAI,CAACJ,MAAM,CAACC,GAAG,CAAS,uBAAuB;gBAC5DI,iBAAiB,IAAI,CAACL,MAAM,CAACC,GAAG,CAAS,uBAAuB;YAClE;YACAK,UAAU,IAAI,CAACN,MAAM,CAACC,GAAG,CAAS,qBAAqB;YACvDM,gBAAgB;YAChBC,QAAQ,IAAI,CAACR,MAAM,CAACC,GAAG,CAAS,mBAAmB;QACrD;IACF;AAuCF"}