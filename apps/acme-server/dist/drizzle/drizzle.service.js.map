{"version":3,"sources":["../../src/drizzle/drizzle.service.ts"],"sourcesContent":["import { schema } from '@acme/db'\nimport { ConfigService } from '@nestjs/config'\nimport { drizzle, type NodePgDatabase } from 'drizzle-orm/node-postgres'\nimport { Pool } from 'pg'\n\nexport const DrizzleAsyncProvider = 'DrizzleAsyncProvider'\n\nexport const drizzleProvider = [\n  {\n    inject: [ConfigService],\n    provide: DrizzleAsyncProvider,\n    useFactory: async (configService: ConfigService) => {\n      const connectionString = configService.get<string>('DATABASE_URL')\n      const pool = new Pool({ connectionString })\n      const _drizzle = drizzle(pool, { casing: 'snake_case', schema }) as NodePgDatabase<typeof schema>\n      console.log('âœ… Drizzle Connection initialized')\n      return _drizzle\n    },\n  },\n]\n\nexport { schema }\n"],"names":["DrizzleAsyncProvider","drizzleProvider","schema","inject","ConfigService","provide","useFactory","configService","connectionString","get","pool","Pool","_drizzle","drizzle","casing","console","log"],"mappings":";;;;;;;;;;;QAKaA;eAAAA;;QAEAC;eAAAA;;QAcJC;eAAAA,UAAM;;;oBArBQ;wBACO;8BACe;oBACxB;AAEd,MAAMF,uBAAuB;AAE7B,MAAMC,kBAAkB;IAC7B;QACEE,QAAQ;YAACC,qBAAa;SAAC;QACvBC,SAASL;QACTM,YAAY,OAAOC;YACjB,MAAMC,mBAAmBD,cAAcE,GAAG,CAAS;YACnD,MAAMC,OAAO,IAAIC,QAAI,CAAC;gBAAEH;YAAiB;YACzC,MAAMI,WAAWC,IAAAA,qBAAO,EAACH,MAAM;gBAAEI,QAAQ;gBAAcZ,QAAAA,UAAM;YAAC;YAC9Da,QAAQC,GAAG,CAAC;YACZ,OAAOJ;QACT;IACF;CACD"}