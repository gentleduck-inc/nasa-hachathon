{"version":3,"sources":["../src/main.ts"],"sourcesContent":["import { NestFactory } from '@nestjs/core'\nimport type { NestExpressApplication } from '@nestjs/platform-express'\nimport { DocumentBuilder, SwaggerModule } from '@nestjs/swagger'\nimport { RedisStore } from 'connect-redis'\nimport session from 'express-session'\nimport { patchNestJsSwagger } from 'nestjs-zod'\nimport { createClient } from 'redis'\nimport { AppModule } from './app.module'\nimport { EventsAdapter } from './auth'\n\nasync function bootstrap() {\n  const app = await NestFactory.create<NestExpressApplication>(AppModule)\n\n  app.set('query parser', 'extended')\n  app.set('trust proxy', true)\n\n  app.setGlobalPrefix('v1')\n\n  app.enableCors({\n    allowedHeaders: 'Content-Type,Authorization',\n    credentials: true,\n    methods: 'GET,POST,PUT,PATCH,DELETE,OPTIONS',\n    optionsSuccessStatus: 204,\n    origin: ['http://localhost:3001', 'http://domain:3001'],\n  })\n\n  const redisClient = createClient({\n    url: process.env.REDIS_URL,\n  })\n  await redisClient.connect()\n\n  const _session = session({\n    cookie: {\n      httpOnly: true,\n      maxAge: 1000 * 60 * 60 * 24, // 1 day\n      secure: false, // true in production with HTTPS\n    },\n    resave: false,\n    saveUninitialized: false,\n    secret: process.env.SESSION_SECRET || 'keyboard cat',\n    store: new RedisStore({ client: redisClient, prefix: 'session:' }),\n  })\n  app.use(_session)\n  app.useWebSocketAdapter(new EventsAdapter(_session))\n\n  // Swagger\n  patchNestJsSwagger()\n  const config = new DocumentBuilder()\n    .setTitle('acme acme Server')\n    .setDescription('The acme acme Server API description')\n    .setVersion('1.0')\n    .addTag('acme acme Server')\n    .build()\n  const documentFactory = () => SwaggerModule.createDocument(app, config)\n  SwaggerModule.setup('api', app, documentFactory)\n\n  await app.listen(process.env.PORT ?? 3000)\n}\n\nbootstrap()\n"],"names":["bootstrap","app","NestFactory","create","AppModule","set","setGlobalPrefix","enableCors","allowedHeaders","credentials","methods","optionsSuccessStatus","origin","redisClient","createClient","url","process","env","REDIS_URL","connect","_session","session","cookie","httpOnly","maxAge","secure","resave","saveUninitialized","secret","SESSION_SECRET","store","RedisStore","client","prefix","use","useWebSocketAdapter","EventsAdapter","patchNestJsSwagger","config","DocumentBuilder","setTitle","setDescription","setVersion","addTag","build","documentFactory","SwaggerModule","createDocument","setup","listen","PORT"],"mappings":";;;;sBAA4B;yBAEmB;8BACpB;uEACP;2BACe;uBACN;2BACH;sBACI;;;;;;AAE9B,eAAeA;IACb,MAAMC,MAAM,MAAMC,iBAAW,CAACC,MAAM,CAAyBC,oBAAS;IAEtEH,IAAII,GAAG,CAAC,gBAAgB;IACxBJ,IAAII,GAAG,CAAC,eAAe;IAEvBJ,IAAIK,eAAe,CAAC;IAEpBL,IAAIM,UAAU,CAAC;QACbC,gBAAgB;QAChBC,aAAa;QACbC,SAAS;QACTC,sBAAsB;QACtBC,QAAQ;YAAC;YAAyB;SAAqB;IACzD;IAEA,MAAMC,cAAcC,IAAAA,mBAAY,EAAC;QAC/BC,KAAKC,QAAQC,GAAG,CAACC,SAAS;IAC5B;IACA,MAAML,YAAYM,OAAO;IAEzB,MAAMC,WAAWC,IAAAA,uBAAO,EAAC;QACvBC,QAAQ;YACNC,UAAU;YACVC,QAAQ,OAAO,KAAK,KAAK;YACzBC,QAAQ;QACV;QACAC,QAAQ;QACRC,mBAAmB;QACnBC,QAAQZ,QAAQC,GAAG,CAACY,cAAc,IAAI;QACtCC,OAAO,IAAIC,wBAAU,CAAC;YAAEC,QAAQnB;YAAaoB,QAAQ;QAAW;IAClE;IACAhC,IAAIiC,GAAG,CAACd;IACRnB,IAAIkC,mBAAmB,CAAC,IAAIC,mBAAa,CAAChB;IAE1C,UAAU;IACViB,IAAAA,6BAAkB;IAClB,MAAMC,SAAS,IAAIC,wBAAe,GAC/BC,QAAQ,CAAC,oBACTC,cAAc,CAAC,wCACfC,UAAU,CAAC,OACXC,MAAM,CAAC,oBACPC,KAAK;IACR,MAAMC,kBAAkB,IAAMC,sBAAa,CAACC,cAAc,CAAC9C,KAAKqC;IAChEQ,sBAAa,CAACE,KAAK,CAAC,OAAO/C,KAAK4C;IAEhC,MAAM5C,IAAIgD,MAAM,CAACjC,QAAQC,GAAG,CAACiC,IAAI,IAAI;AACvC;AAEAlD"}