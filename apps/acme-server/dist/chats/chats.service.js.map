{"version":3,"sources":["../../src/chats/chats.service.ts"],"sourcesContent":["import { Inject, Injectable } from '@nestjs/common'\nimport { desc, eq } from 'drizzle-orm'\nimport { NodePgDatabase } from 'drizzle-orm/node-postgres'\nimport { throwError } from '~/common/libs'\nimport { DrizzleAsyncProvider, schema } from '~/drizzle'\nimport { GetChatHistorySchema, MessageCreateSchema, MessageDeleteSchema, messageUpdateSchema } from './chats.dto'\nimport { ChatsErrorType } from './chats.types'\n\n@Injectable()\nexport class ChatsService {\n  constructor(\n    @Inject(DrizzleAsyncProvider)\n    private readonly db: NodePgDatabase<typeof schema>,\n  ) {}\n\n  async create(data: MessageCreateSchema) {\n    try {\n      const chat = await this.db\n        .insert(schema.messageTable)\n        .values({\n          ...data,\n        })\n        .returning()\n\n      if (!chat.length) {\n        return throwError<ChatsErrorType>('CHAT_FAILED_TO_CREATE')\n      }\n\n      return chat\n    } catch (error) {\n      console.log(error)\n      return throwError<ChatsErrorType>('CHAT_FAILED_TO_CREATE')\n    }\n  }\n\n  async update(data: messageUpdateSchema) {\n    try {\n      const chat = await this.db\n        .update(schema.messageTable)\n        .set({\n          ...data,\n        })\n        .where(eq(schema.messageTable.id, data.id))\n        .returning()\n\n      if (!chat.length) {\n        return throwError<ChatsErrorType>('CHAT_NOT_FOUND_OR_UPDATE_FAILED')\n      }\n\n      return chat\n    } catch (error) {\n      return throwError<ChatsErrorType>('CHAT_FAILED_TO_UPDATE')\n    }\n  }\n\n  async delete(data: MessageDeleteSchema) {\n    try {\n      const chat = await this.db.delete(schema.messageTable).where(eq(schema.messageTable.id, data.id)).returning()\n\n      if (!chat.length) {\n        return throwError<ChatsErrorType>('CHAT_NOT_FOUND_OR_DELETE_FAILED')\n      }\n\n      return chat\n    } catch (error) {\n      return throwError<ChatsErrorType>('CHAT_FAILED_TO_DELETE')\n    }\n  }\n\n  async getHistory(data: GetChatHistorySchema) {\n    try {\n      const messages = await this.db\n        .select({\n          id: schema.messageTable.id,\n          content: schema.messageTable.content,\n          createdAt: schema.messageTable.createdAt,\n          userId: schema.messageTable.userId,\n          name: schema.userTable.name,\n        })\n        .from(schema.messageTable)\n        .where(eq(schema.messageTable.chatId, data.chatId))\n        .orderBy(desc(schema.messageTable.createdAt))\n        .limit(data.limit)\n        .offset(data.cursor)\n        .innerJoin(schema.userTable, eq(schema.messageTable.userId, schema.userTable.id))\n\n      return messages\n    } catch (error) {\n      return throwError<ChatsErrorType>('CHAT_HISTORY_FETCH_FAILED')\n    }\n  }\n}\n"],"names":["ChatsService","create","data","chat","db","insert","schema","messageTable","values","returning","length","throwError","error","console","log","update","set","where","eq","id","delete","getHistory","messages","select","content","createdAt","userId","name","userTable","from","chatId","orderBy","desc","limit","offset","cursor","innerJoin"],"mappings":";;;;+BASaA;;;eAAAA;;;wBATsB;4BACV;8BACM;sBACJ;yBACkB;;;;;;;;;;;;;;;AAKtC,IAAA,AAAMA,eAAN,MAAMA;IAMX,MAAMC,OAAOC,IAAyB,EAAE;QACtC,IAAI;YACF,MAAMC,OAAO,MAAM,IAAI,CAACC,EAAE,CACvBC,MAAM,CAACC,eAAM,CAACC,YAAY,EAC1BC,MAAM,CAAC;gBACN,GAAGN,IAAI;YACT,GACCO,SAAS;YAEZ,IAAI,CAACN,KAAKO,MAAM,EAAE;gBAChB,OAAOC,IAAAA,gBAAU,EAAiB;YACpC;YAEA,OAAOR;QACT,EAAE,OAAOS,OAAO;YACdC,QAAQC,GAAG,CAACF;YACZ,OAAOD,IAAAA,gBAAU,EAAiB;QACpC;IACF;IAEA,MAAMI,OAAOb,IAAyB,EAAE;QACtC,IAAI;YACF,MAAMC,OAAO,MAAM,IAAI,CAACC,EAAE,CACvBW,MAAM,CAACT,eAAM,CAACC,YAAY,EAC1BS,GAAG,CAAC;gBACH,GAAGd,IAAI;YACT,GACCe,KAAK,CAACC,IAAAA,cAAE,EAACZ,eAAM,CAACC,YAAY,CAACY,EAAE,EAAEjB,KAAKiB,EAAE,GACxCV,SAAS;YAEZ,IAAI,CAACN,KAAKO,MAAM,EAAE;gBAChB,OAAOC,IAAAA,gBAAU,EAAiB;YACpC;YAEA,OAAOR;QACT,EAAE,OAAOS,OAAO;YACd,OAAOD,IAAAA,gBAAU,EAAiB;QACpC;IACF;IAEA,MAAMS,OAAOlB,IAAyB,EAAE;QACtC,IAAI;YACF,MAAMC,OAAO,MAAM,IAAI,CAACC,EAAE,CAACgB,MAAM,CAACd,eAAM,CAACC,YAAY,EAAEU,KAAK,CAACC,IAAAA,cAAE,EAACZ,eAAM,CAACC,YAAY,CAACY,EAAE,EAAEjB,KAAKiB,EAAE,GAAGV,SAAS;YAE3G,IAAI,CAACN,KAAKO,MAAM,EAAE;gBAChB,OAAOC,IAAAA,gBAAU,EAAiB;YACpC;YAEA,OAAOR;QACT,EAAE,OAAOS,OAAO;YACd,OAAOD,IAAAA,gBAAU,EAAiB;QACpC;IACF;IAEA,MAAMU,WAAWnB,IAA0B,EAAE;QAC3C,IAAI;YACF,MAAMoB,WAAW,MAAM,IAAI,CAAClB,EAAE,CAC3BmB,MAAM,CAAC;gBACNJ,IAAIb,eAAM,CAACC,YAAY,CAACY,EAAE;gBAC1BK,SAASlB,eAAM,CAACC,YAAY,CAACiB,OAAO;gBACpCC,WAAWnB,eAAM,CAACC,YAAY,CAACkB,SAAS;gBACxCC,QAAQpB,eAAM,CAACC,YAAY,CAACmB,MAAM;gBAClCC,MAAMrB,eAAM,CAACsB,SAAS,CAACD,IAAI;YAC7B,GACCE,IAAI,CAACvB,eAAM,CAACC,YAAY,EACxBU,KAAK,CAACC,IAAAA,cAAE,EAACZ,eAAM,CAACC,YAAY,CAACuB,MAAM,EAAE5B,KAAK4B,MAAM,GAChDC,OAAO,CAACC,IAAAA,gBAAI,EAAC1B,eAAM,CAACC,YAAY,CAACkB,SAAS,GAC1CQ,KAAK,CAAC/B,KAAK+B,KAAK,EAChBC,MAAM,CAAChC,KAAKiC,MAAM,EAClBC,SAAS,CAAC9B,eAAM,CAACsB,SAAS,EAAEV,IAAAA,cAAE,EAACZ,eAAM,CAACC,YAAY,CAACmB,MAAM,EAAEpB,eAAM,CAACsB,SAAS,CAACT,EAAE;YAEjF,OAAOG;QACT,EAAE,OAAOV,OAAO;YACd,OAAOD,IAAAA,gBAAU,EAAiB;QACpC;IACF;IAhFA,YACE,AACiBP,EAAiC,CAClD;aADiBA,KAAAA;IAChB;AA8EL"}