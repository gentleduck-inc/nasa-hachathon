{"version":3,"sources":["../../src/chats/chats.dto.ts"],"sourcesContent":["import z from 'zod'\nimport { ChatsErrorType } from './chats.types'\n\nconst errorMessage = <T extends ChatsErrorType>(message: T) => ({ message })\n\nexport const connectChatQuerySchema = z.object({\n  chatId: z.string({ ...errorMessage('ZOD_EXPECTED_STRING') }),\n  userId: z.string({ ...errorMessage('ZOD_EXPECTED_STRING') }),\n})\nexport type ConnectChatQuerySchema = z.infer<typeof connectChatQuerySchema>\n\nexport const messageCreateSchema = z.object({\n  type: z.string({ ...errorMessage('ZOD_EXPECTED_STRING') }),\n  content: z.string({ ...errorMessage('ZOD_EXPECTED_STRING') }),\n  metadata: z.object({\n    model: z.string({ ...errorMessage('ZOD_EXPECTED_STRING') }),\n  }),\n  userId: z.string({ ...errorMessage('ZOD_EXPECTED_STRING') }).uuid({ ...errorMessage('ZOD_INVALID') }),\n  chatId: z.string({ ...errorMessage('ZOD_EXPECTED_STRING') }).uuid({ ...errorMessage('ZOD_INVALID') }),\n  modelId: z.string({ ...errorMessage('ZOD_EXPECTED_STRING') }).uuid({ ...errorMessage('ZOD_INVALID') }),\n})\nexport type MessageCreateSchema = z.infer<typeof messageCreateSchema>\n\nexport const messageUpdateSchema = messageCreateSchema.extend({\n  id: z.string({ ...errorMessage('ZOD_EXPECTED_STRING') }).uuid({ ...errorMessage('ZOD_INVALID') }),\n})\nexport type messageUpdateSchema = z.infer<typeof messageUpdateSchema>\n\nexport const messageDeleteSchema = z.object({\n  id: z.string({ ...errorMessage('ZOD_EXPECTED_STRING') }).uuid({ ...errorMessage('ZOD_INVALID') }),\n})\nexport type MessageDeleteSchema = z.infer<typeof messageDeleteSchema>\n\nexport const getChatHistorySchema = z.object({\n  chatId: z.string(),\n  cursor: z.number().min(0).default(0),\n  limit: z.number().min(1).max(100).default(20),\n})\nexport type GetChatHistorySchema = z.infer<typeof getChatHistorySchema>\n"],"names":["connectChatQuerySchema","getChatHistorySchema","messageCreateSchema","messageDeleteSchema","messageUpdateSchema","errorMessage","message","z","object","chatId","string","userId","type","content","metadata","model","uuid","modelId","extend","id","cursor","number","min","default","limit","max"],"mappings":";;;;;;;;;;;QAKaA;eAAAA;;QA4BAC;eAAAA;;QAtBAC;eAAAA;;QAiBAC;eAAAA;;QALAC;eAAAA;;;4DAvBC;;;;;;AAGd,MAAMC,eAAe,CAA2BC,UAAgB,CAAA;QAAEA;IAAQ,CAAA;AAEnE,MAAMN,yBAAyBO,YAAC,CAACC,MAAM,CAAC;IAC7CC,QAAQF,YAAC,CAACG,MAAM,CAAC;QAAE,GAAGL,aAAa,sBAAsB;IAAC;IAC1DM,QAAQJ,YAAC,CAACG,MAAM,CAAC;QAAE,GAAGL,aAAa,sBAAsB;IAAC;AAC5D;AAGO,MAAMH,sBAAsBK,YAAC,CAACC,MAAM,CAAC;IAC1CI,MAAML,YAAC,CAACG,MAAM,CAAC;QAAE,GAAGL,aAAa,sBAAsB;IAAC;IACxDQ,SAASN,YAAC,CAACG,MAAM,CAAC;QAAE,GAAGL,aAAa,sBAAsB;IAAC;IAC3DS,UAAUP,YAAC,CAACC,MAAM,CAAC;QACjBO,OAAOR,YAAC,CAACG,MAAM,CAAC;YAAE,GAAGL,aAAa,sBAAsB;QAAC;IAC3D;IACAM,QAAQJ,YAAC,CAACG,MAAM,CAAC;QAAE,GAAGL,aAAa,sBAAsB;IAAC,GAAGW,IAAI,CAAC;QAAE,GAAGX,aAAa,cAAc;IAAC;IACnGI,QAAQF,YAAC,CAACG,MAAM,CAAC;QAAE,GAAGL,aAAa,sBAAsB;IAAC,GAAGW,IAAI,CAAC;QAAE,GAAGX,aAAa,cAAc;IAAC;IACnGY,SAASV,YAAC,CAACG,MAAM,CAAC;QAAE,GAAGL,aAAa,sBAAsB;IAAC,GAAGW,IAAI,CAAC;QAAE,GAAGX,aAAa,cAAc;IAAC;AACtG;AAGO,MAAMD,sBAAsBF,oBAAoBgB,MAAM,CAAC;IAC5DC,IAAIZ,YAAC,CAACG,MAAM,CAAC;QAAE,GAAGL,aAAa,sBAAsB;IAAC,GAAGW,IAAI,CAAC;QAAE,GAAGX,aAAa,cAAc;IAAC;AACjG;AAGO,MAAMF,sBAAsBI,YAAC,CAACC,MAAM,CAAC;IAC1CW,IAAIZ,YAAC,CAACG,MAAM,CAAC;QAAE,GAAGL,aAAa,sBAAsB;IAAC,GAAGW,IAAI,CAAC;QAAE,GAAGX,aAAa,cAAc;IAAC;AACjG;AAGO,MAAMJ,uBAAuBM,YAAC,CAACC,MAAM,CAAC;IAC3CC,QAAQF,YAAC,CAACG,MAAM;IAChBU,QAAQb,YAAC,CAACc,MAAM,GAAGC,GAAG,CAAC,GAAGC,OAAO,CAAC;IAClCC,OAAOjB,YAAC,CAACc,MAAM,GAAGC,GAAG,CAAC,GAAGG,GAAG,CAAC,KAAKF,OAAO,CAAC;AAC5C"}