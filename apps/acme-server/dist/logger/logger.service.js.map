{"version":3,"sources":["../../src/logger/logger.service.ts"],"sourcesContent":["import { execSync } from 'node:child_process'\nimport { Injectable } from '@nestjs/common'\n\n@Injectable()\nexport class LoggerService {\n  getRequestMetadata(req: any) {\n    const ip = this.getIp(req)\n\n    return {\n      headers: req.headers,\n      ip,\n      referer: req.headers['referer'] || '',\n      userAgent: req.headers['user-agent'] || '',\n    }\n  }\n\n  private getIp(req: any): string {\n    const xForwardedFor = req.headers['x-forwarded-for']\n    const ip =\n      (typeof xForwardedFor === 'string' ? xForwardedFor.split(',')[0].trim() : null) ||\n      req.ip ||\n      req.connection?.remoteAddress ||\n      ''\n\n    if (this.isPrivateIp(ip)) {\n      return this.getPublicIpSync() || ip\n    }\n\n    return ip\n  }\n\n  private isPrivateIp(ip: string): boolean {\n    return (\n      ip.startsWith('127.') ||\n      ip.startsWith('10.') ||\n      ip.startsWith('192.168.') ||\n      ip.startsWith('172.') ||\n      ip === '::1'\n    )\n  }\n\n  private getPublicIpSync(): string | null {\n    try {\n      return execSync('curl -s https://api.ipify.org', { timeout: 1000 }).toString().trim()\n    } catch {\n      return null\n    }\n  }\n}\n"],"names":["LoggerService","getRequestMetadata","req","ip","getIp","headers","referer","userAgent","xForwardedFor","split","trim","connection","remoteAddress","isPrivateIp","getPublicIpSync","startsWith","execSync","timeout","toString"],"mappings":";;;;+BAIaA;;;eAAAA;;;mCAJY;wBACE;;;;;;;AAGpB,IAAA,AAAMA,gBAAN,MAAMA;IACXC,mBAAmBC,GAAQ,EAAE;QAC3B,MAAMC,KAAK,IAAI,CAACC,KAAK,CAACF;QAEtB,OAAO;YACLG,SAASH,IAAIG,OAAO;YACpBF;YACAG,SAASJ,IAAIG,OAAO,CAAC,UAAU,IAAI;YACnCE,WAAWL,IAAIG,OAAO,CAAC,aAAa,IAAI;QAC1C;IACF;IAEQD,MAAMF,GAAQ,EAAU;QAC9B,MAAMM,gBAAgBN,IAAIG,OAAO,CAAC,kBAAkB;QACpD,MAAMF,KACJ,AAAC,CAAA,OAAOK,kBAAkB,WAAWA,cAAcC,KAAK,CAAC,IAAI,CAAC,EAAE,CAACC,IAAI,KAAK,IAAG,KAC7ER,IAAIC,EAAE,IACND,IAAIS,UAAU,EAAEC,iBAChB;QAEF,IAAI,IAAI,CAACC,WAAW,CAACV,KAAK;YACxB,OAAO,IAAI,CAACW,eAAe,MAAMX;QACnC;QAEA,OAAOA;IACT;IAEQU,YAAYV,EAAU,EAAW;QACvC,OACEA,GAAGY,UAAU,CAAC,WACdZ,GAAGY,UAAU,CAAC,UACdZ,GAAGY,UAAU,CAAC,eACdZ,GAAGY,UAAU,CAAC,WACdZ,OAAO;IAEX;IAEQW,kBAAiC;QACvC,IAAI;YACF,OAAOE,IAAAA,2BAAQ,EAAC,iCAAiC;gBAAEC,SAAS;YAAK,GAAGC,QAAQ,GAAGR,IAAI;QACrF,EAAE,OAAM;YACN,OAAO;QACT;IACF;AACF"}