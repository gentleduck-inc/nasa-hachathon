{"version":3,"sources":["../../../src/ai/services/chatGPT-gemini.service.ts"],"sourcesContent":["import { Injectable } from '@nestjs/common'\nimport { ConfigService } from '@nestjs/config'\nimport OpenAI from 'openai'\nimport { AIServiceAbstract } from '../ai.service'\nimport { AIModelVariant } from '../ai.types'\n\n@Injectable()\nexport class ChatGPTGeminiService implements AIServiceAbstract {\n  private client: OpenAI\n\n  constructor(private readonly config: ConfigService) {\n    this.client = new OpenAI({\n      apiKey: this.config.get('OPENAI_API_KEY')!,\n    })\n  }\n\n  async initiateAccess(): Promise<void> {\n    try {\n      await this.client.models.list()\n      console.log('✅ OpenAI API initialized.')\n    } catch (err) {\n      console.error('❌ OpenAI init failed:', err)\n    }\n  }\n\n  async getAnswerStream(message: string, model: AIModelVariant['model'], cb: (chunk: string) => void) {\n    try {\n      if (model.includes('gemini')) {\n        console.log('using gemini api')\n        this.client.apiKey = 'AIzaSyA4_a_yqkLPb0ofQwDY8aMJeUQA7USHLrc'\n        this.client.baseURL = 'https://generativelanguage.googleapis.com/v1beta/openai/'\n      }\n\n      const completion = await this.client.chat.completions.create({\n        model,\n        messages: [{ role: 'user', content: message }],\n        stream: true,\n      })\n\n      for await (const chunk of completion) {\n        cb(chunk.choices[0].delta.content as string)\n      }\n    } catch (error) {\n      console.log('error', error)\n      throw error\n    }\n  }\n}\n"],"names":["ChatGPTGeminiService","initiateAccess","client","models","list","console","log","err","error","getAnswerStream","message","model","cb","includes","apiKey","baseURL","completion","chat","completions","create","messages","role","content","stream","chunk","choices","delta","config","OpenAI","get"],"mappings":";;;;+BAOaA;;;eAAAA;;;wBAPc;wBACG;+DACX;;;;;;;;;;;;;;;AAKZ,IAAA,AAAMA,uBAAN,MAAMA;IASX,MAAMC,iBAAgC;QACpC,IAAI;YACF,MAAM,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,IAAI;YAC7BC,QAAQC,GAAG,CAAC;QACd,EAAE,OAAOC,KAAK;YACZF,QAAQG,KAAK,CAAC,yBAAyBD;QACzC;IACF;IAEA,MAAME,gBAAgBC,OAAe,EAAEC,KAA8B,EAAEC,EAA2B,EAAE;QAClG,IAAI;YACF,IAAID,MAAME,QAAQ,CAAC,WAAW;gBAC5BR,QAAQC,GAAG,CAAC;gBACZ,IAAI,CAACJ,MAAM,CAACY,MAAM,GAAG;gBACrB,IAAI,CAACZ,MAAM,CAACa,OAAO,GAAG;YACxB;YAEA,MAAMC,aAAa,MAAM,IAAI,CAACd,MAAM,CAACe,IAAI,CAACC,WAAW,CAACC,MAAM,CAAC;gBAC3DR;gBACAS,UAAU;oBAAC;wBAAEC,MAAM;wBAAQC,SAASZ;oBAAQ;iBAAE;gBAC9Ca,QAAQ;YACV;YAEA,WAAW,MAAMC,SAASR,WAAY;gBACpCJ,GAAGY,MAAMC,OAAO,CAAC,EAAE,CAACC,KAAK,CAACJ,OAAO;YACnC;QACF,EAAE,OAAOd,OAAO;YACdH,QAAQC,GAAG,CAAC,SAASE;YACrB,MAAMA;QACR;IACF;IApCA,YAAY,AAAiBmB,MAAqB,CAAE;aAAvBA,SAAAA;QAC3B,IAAI,CAACzB,MAAM,GAAG,IAAI0B,eAAM,CAAC;YACvBd,QAAQ,IAAI,CAACa,MAAM,CAACE,GAAG,CAAC;QAC1B;IACF;AAiCF"}