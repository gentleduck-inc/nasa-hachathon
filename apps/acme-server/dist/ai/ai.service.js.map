{"version":3,"sources":["../../src/ai/ai.service.ts"],"sourcesContent":["import { Injectable } from '@nestjs/common'\nimport { AIModelVariant } from './ai.types'\nimport { ChatGPTGeminiService } from './services'\n\n@Injectable()\nexport abstract class AIServiceAbstract {\n  abstract initiateAccess(): Promise<void>\n  abstract getAnswerStream(message: string, model: AIModelVariant['model'], cb: (chunk: string) => void): Promise<void>\n}\n\n@Injectable()\nexport class AIService {\n  constructor(private chatGPT_gemini: ChatGPTGeminiService) {}\n\n  getService(type: AIModelVariant['provider']): AIServiceAbstract {\n    switch (type) {\n      case 'chatGPT':\n        return this.chatGPT_gemini\n      default:\n        throw new Error('Invalid service type')\n    }\n  }\n}\n"],"names":["AIService","AIServiceAbstract","getService","type","chatGPT_gemini","Error"],"mappings":";;;;;;;;;;;QAWaA;eAAAA;;QANSC;eAAAA;;;wBALK;0BAEU;;;;;;;;;;AAG9B,IAAA,AAAeA,oBAAf,MAAeA;AAGtB;;;;AAGO,IAAA,AAAMD,YAAN,MAAMA;IAGXE,WAAWC,IAAgC,EAAqB;QAC9D,OAAQA;YACN,KAAK;gBACH,OAAO,IAAI,CAACC,cAAc;YAC5B;gBACE,MAAM,IAAIC,MAAM;QACpB;IACF;IATA,YAAY,AAAQD,cAAoC,CAAE;aAAtCA,iBAAAA;IAAuC;AAU7D"}