{"version":3,"sources":["../../../src/common/interceptors/logging.interceptor.ts"],"sourcesContent":["import { Injectable, NestInterceptor, ExecutionContext, CallHandler, Inject } from '@nestjs/common'\nimport { Observable, tap } from 'rxjs'\nimport { WINSTON_MODULE_NEST_PROVIDER, WinstonLogger } from 'nest-winston'\n\n@Injectable()\nexport class LoggingInterceptor implements NestInterceptor {\n  constructor(\n    @Inject(WINSTON_MODULE_NEST_PROVIDER)\n    private readonly logger: WinstonLogger,\n  ) {}\n\n  intercept(context: ExecutionContext, next: CallHandler): Observable<any> {\n    const req = context.switchToHttp().getRequest()\n    const { method, url } = req\n    const now = Date.now()\n\n    return next.handle().pipe(\n      tap(() => {\n        const delay = Date.now() - now\n        this.logger.log(`${method} ${url} - ${delay}ms`, 'HTTP')\n      }),\n    )\n  }\n}\n"],"names":["LoggingInterceptor","intercept","context","next","req","switchToHttp","getRequest","method","url","now","Date","handle","pipe","tap","delay","logger","log"],"mappings":";;;;+BAKaA;;;eAAAA;;;wBALsE;sBACnD;6BAC4B;;;;;;;;;;;;;;;AAGrD,IAAA,AAAMA,qBAAN,MAAMA;IAMXC,UAAUC,OAAyB,EAAEC,IAAiB,EAAmB;QACvE,MAAMC,MAAMF,QAAQG,YAAY,GAAGC,UAAU;QAC7C,MAAM,EAAEC,MAAM,EAAEC,GAAG,EAAE,GAAGJ;QACxB,MAAMK,MAAMC,KAAKD,GAAG;QAEpB,OAAON,KAAKQ,MAAM,GAAGC,IAAI,CACvBC,IAAAA,SAAG,EAAC;YACF,MAAMC,QAAQJ,KAAKD,GAAG,KAAKA;YAC3B,IAAI,CAACM,MAAM,CAACC,GAAG,CAAC,GAAGT,OAAO,CAAC,EAAEC,IAAI,GAAG,EAAEM,MAAM,EAAE,CAAC,EAAE;QACnD;IAEJ;IAhBA,YACE,AACiBC,MAAqB,CACtC;aADiBA,SAAAA;IAChB;AAcL"}